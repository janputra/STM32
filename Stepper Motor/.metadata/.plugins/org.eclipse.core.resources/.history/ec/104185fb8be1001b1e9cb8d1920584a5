/*
 * stepper.h
 *
 *  Created on: Jul 5, 2021
 *      Author: janpo
 */

#ifndef INC_STEPPER_H_
#define INC_STEPPER_H_

#include "main.h"
#include "tim.h"
#include "usart.h"

#define TIM_MTR htim7

typedef struct SM_Param
{
	uint16_t speed;
	uint16_t accel;
	uint16_t decel;
	uint16_t steps;

}SM_Param;

/*! \brief Holding data used by timer interrupt for speed ramp calculation.
 *
 *  Contains data used by timer interrupt to calculate speed profile.
 *  Data is written to it by move(), when stepper motor is moving (timer
 *  interrupt running) data is read/updated when calculating a new step_delay
 */
typedef struct speedRampData{
  //! What part of the speed ramp we are in.
  uint8_t run_state;
  //! Direction stepper motor should move.
  uint8_t dir;
  //! Peroid of next timer delay. At start this value set the accelration rate.
  uint16_t step_delay;
  //! What step_pos to start decelaration
  uint16_t decel_start;
  //! Sets deceleration rate.
  int16_t decel_val;
  //! Minimum time delay (max speed)
  int16_t min_delay;
  //! Counter used when accelerateing/decelerateing to calculate step_delay.
  int16_t accel_count;
  int16_t step_count;
  uint8_t step_pos;
  uint8_t state;

} speedRampData;


// Speed ramp states
#define STOP  0
#define ACCEL 1
#define DECEL 2
#define RUN   3

#define F_TIM

#define STEP_PER_REV 2048
#define CW 0
#define CCW 1


uint8_t ibuf[10]={0};
uint16_t c=0;
//void MTR_ISR(void);

#endif /* INC_STEPPER_H_ */
